// <auto-generated />
using System;
using ClubDesktop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClubDesktop.Migrations
{
    [DbContext(typeof(ClubDesktopContext))]
    partial class ClubDesktopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubDesktop.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Horarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actividades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costo = 2500m,
                            Horarios = "Lunes y miércoles 20hs",
                            Nombre = "Ajedrez"
                        },
                        new
                        {
                            Id = 2,
                            Costo = 2000m,
                            Horarios = "Martes y Jueves 20hs",
                            Nombre = "Folklore"
                        });
                });

            modelBuilder.Entity("ClubDesktop.Models.Cobrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cobradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Oscar Rodriguez"
                        });
                });

            modelBuilder.Entity("ClubDesktop.Models.Cuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<bool>("Cobrada")
                        .HasColumnType("bit");

                    b.Property<int?>("CobradorId")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SocioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("CobradorId");

                    b.HasIndex("SocioId");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("ClubDesktop.Models.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Socios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoNombre = "Juan Perez",
                            Dirección = "9 de julio 2323",
                            Teléfono = "123456"
                        },
                        new
                        {
                            Id = 2,
                            ApellidoNombre = "Fulano DeTal",
                            Dirección = "Av Iriondo 2123",
                            Teléfono = "345678"
                        });
                });

            modelBuilder.Entity("ClubDesktop.Models.Cuota", b =>
                {
                    b.HasOne("ClubDesktop.Models.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubDesktop.Models.Cobrador", "Cobrador")
                        .WithMany()
                        .HasForeignKey("CobradorId");

                    b.HasOne("ClubDesktop.Models.Socio", "Socio")
                        .WithMany()
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Cobrador");

                    b.Navigation("Socio");
                });
#pragma warning restore 612, 618
        }
    }
}
